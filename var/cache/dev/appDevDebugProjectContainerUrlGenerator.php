<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ApiBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_backlog_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::IndexProjectBacklogApiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/ProjectBacklog/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_view_ProjectBacklog_tasks' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::view_ProjectBacklogApiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_view_BacklogTask' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::ViewBacklogTaskApiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/task/view',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    3 =>     array (      0 => 'text',      1 => '/api/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_BacklogTask' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::RemoveBacklogTaskApiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/task/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    3 =>     array (      0 => 'text',      1 => '/api/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_BacklogTask' => array (  0 =>   array (    0 => 'id_b',    1 => 'title',    2 => 'story_points',    3 => 'state',    4 => 'priority',    5 => 'desc_f',    6 => 'sprint_id',    7 => 'finished_date',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::AddBacklogTaskApiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'finished_date',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sprint_id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'desc_f',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'priority',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'state',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'story_points',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'title',    ),    7 =>     array (      0 => 'text',      1 => '/task/add',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    9 =>     array (      0 => 'text',      1 => '/api/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_afficher_Team' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::afficherMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/Team/afficher',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ajouter_Team' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::ajouterMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/Team/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_Team' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::deleteMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/Team/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_modifier_Team' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::modifierMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/Team/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_afficher_Meeting' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::afficherMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/Meeting/afficher',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_Meeting' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::deleteMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/Meeting/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ajouter_Meeting' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::ajouterMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/Meeting/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_modifier_Meeting' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::updateMegAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/Meeting/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'entreprise_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntrepriseBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entreprise/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntrepriseBundle\\Controller\\EntrepriseController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entreprise/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'read' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntrepriseBundle\\Controller\\EntrepriseController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entreprise/read',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EntrepriseBundle\\Controller\\EntrepriseController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/entreprise/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EntrepriseBundle\\Controller\\EntrepriseController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/entreprise/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'scarra' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntrepriseBundle\\Controller\\EntrepriseController::scarraAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entreprise/scarra',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'xhem' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EntrepriseBundle\\Controller\\EntrepriseController::xhemAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entreprise/xhem',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sprint_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sprintBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sprint/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createsprint' => array (  0 =>   array (    0 => 'id_projet',  ),  1 =>   array (    '_controller' => 'sprintBundle\\Controller\\sprintController::createsprintAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_projet',    ),    1 =>     array (      0 => 'text',      1 => '/sprint/createsprint',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichersprint' => array (  0 =>   array (    0 => 'id_projet',  ),  1 =>   array (    '_controller' => 'sprintBundle\\Controller\\sprintController::affichersprintAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_projet',    ),    1 =>     array (      0 => 'text',      1 => '/sprint/affichersprint',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatesprint' => array (  0 =>   array (    0 => 'idU',    1 => 'id',  ),  1 =>   array (    '_controller' => 'sprintBundle\\Controller\\sprintController::updatesprintAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idU',    ),    2 =>     array (      0 => 'text',      1 => '/sprint/updatesprint',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletesprint' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sprintBundle\\Controller\\sprintController::deletesprintAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/sprint/deletesprint',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'DRAG_DROP' => array (  0 =>   array (    0 => 'idd',  ),  1 =>   array (    '_controller' => 'sprintBundle\\Controller\\sprintController::DRAG_DROPAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idd',    ),    1 =>     array (      0 => 'text',      1 => '/sprint/DRAG_DROP',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stat_sprint' => array (  0 =>   array (    0 => 'idS',  ),  1 =>   array (    '_controller' => 'sprintBundle\\Controller\\sprintController::statsprintAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idS',    ),    1 =>     array (      0 => 'text',      1 => '/sprint/stat_sprint',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'projets_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'projetsBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createprojet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'projetsBundle\\Controller\\projetsController::createprojetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/createprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteprojet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'projetsBundle\\Controller\\projetsController::deleteprojetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projets/deleteprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Rdeleteprojet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'projetsBundle\\Controller\\projetsController::RdeleteprojetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projets/Rdeleteprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateprojet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'projetsBundle\\Controller\\projetsController::updateprojetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/projets/updateprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherprojet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'projetsBundle\\Controller\\projetsController::afficherprojetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/afficherprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Historyprojet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'projetsBundle\\Controller\\projetsController::HistoryprojetsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/projets/Historyprojet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\ParticipantController::AddpAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/P/Addp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_updatevent' => array (  0 =>   array (    0 => 'nomp',  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\ParticipantController::UpdateventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nomp',    ),    1 =>     array (      0 => 'text',      1 => '/event/P/Updatevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_readevent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\ParticipantController::ReadeventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/P/Readevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_deletevent' => array (  0 =>   array (    0 => 'nomp',  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\ParticipantController::DeleteventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nomp',    ),    1 =>     array (      0 => 'text',      1 => '/event/P/Deletevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\ParticipantController::SearchpAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/P/Searchp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'viewparticipant' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\EventAdminController::ViewparticipantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/P/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'triep' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\ParticipantController::TriepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/P/Triep',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loginp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\ParticipantController::LoginpAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/P/Loginp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addevent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\EventAdminController::addeventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/addeventA',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherevent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\EventAdminController::affichereventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/afficherevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_events' => array (  0 =>   array (    0 => 'idev',  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\EventAdminController::updateEventsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idev',    ),    1 =>     array (      0 => 'text',      1 => '/event/updateEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteevents' => array (  0 =>   array (    0 => 'idev',  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\EventAdminController::deleteeventsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idev',    ),    1 =>     array (      0 => 'text',      1 => '/event/deleteevents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchevents' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\EventAdminController::searcheventsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/searchevents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'statevent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\EventAdminController::stateventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/statevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addcertif' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\CertifController::addcertifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/addcertif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'readcertif' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\CertifController::readcertifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/readcertif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatecertif' => array (  0 =>   array (    0 => 'idc',  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\CertifController::updatecertifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idc',    ),    1 =>     array (      0 => 'text',      1 => '/event/updatecertif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletecertif' => array (  0 =>   array (    0 => 'idc',  ),  1 =>   array (    '_controller' => 'EventBundle\\Controller\\CertifController::deletecertifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idc',    ),    1 =>     array (      0 => 'text',      1 => '/event/deletecertif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'subscription_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscription/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'readtarif' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\TarifController::readtarifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscription/readtarif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createtarif' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\TarifController::createtarifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscription/createtarif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletetarif' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\TarifController::deletetarifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/subscription/deletetarif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatetarif' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\TarifController::updatetarifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/subscription/updatetarif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'readsub' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\SubscriptionController::readsubAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscription/readsub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createsub' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\SubscriptionController::createsubAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscription/createsub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletesub' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\SubscriptionController::deletesubAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/subscription/deletesub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatesub' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SubscriptionBundle\\Controller\\SubscriptionController::upadatesubAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/subscription/upadatesub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\DefaultController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/Register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\SecurityController::redirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'backlog_sprint_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::backlog_sprint_indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backlog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'backlog_nav_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::backlog_navAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backlog/backlog_nav',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_ProjectBacklog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::create_ProjectBacklogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view_ProjectBacklog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::view_ProjectBacklogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_ProjectBacklog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::DeleteProjectBacklogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_ProjectBacklog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::UpdateProjectBacklogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'index_ProjectBacklog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::IndexProjectBacklogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_BacklogTask' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::AddBacklogTaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/task/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_BacklogTask' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::RemoveBacklogTaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/task/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    3 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_BacklogTask' => array (  0 =>   array (    0 => 'id',    1 => 'id_u',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::MesTachesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_u',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_BacklogTask' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::UpdateBacklogTaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/task/update',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    3 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view_BacklogTask' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::ViewBacklogTaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/task/view',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    3 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'TransitNotification' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',    2 => 'notifiable',    3 => 'notification',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::TransitNotificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    2 =>     array (      0 => 'text',      1 => '/transit',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/task/view',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    6 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'archiver_BacklogTask' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',    2 => 'archive',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::ArchiverBacklogTaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'archive',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    3 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_commentaire' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::CreateTaskCommentaireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commentaire/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/task/view',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    4 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_commentaire' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',    2 => 'id_c',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::UpdateTaskCommentaireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_c',    ),    1 =>     array (      0 => 'text',      1 => '/commentaire/update',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/task/view',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    5 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_commentaire' => array (  0 =>   array (    0 => 'id_b',    1 => 'id',    2 => 'id_c',  ),  1 =>   array (    '_controller' => 'BacklogBundle\\Controller\\DefaultController::DeleteTaskCommentaireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_c',    ),    1 =>     array (      0 => 'text',      1 => '/commentaire/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/task/view',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_b',    ),    5 =>     array (      0 => 'text',      1 => '/backlog/ProjectBacklog/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'meeting_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/meeting/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_meeting' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::createMeetingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/meeting/createMeeting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'read_meeting' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::readMeetingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/meeting/readMeeting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_meeting' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::updateMeetingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/meeting/updateMeeting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_meeting' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::deleteMeetingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/meeting/deleteMeeting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/meeting/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stat_metting' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MeetingBundle\\Controller\\MeetingController::statmeetingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/meeting/stat_metting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'team_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createteam' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::createteamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/createteam',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'readteam' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::readteamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/readteam',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateteam' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::updateteamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/team/updateteam',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteteam' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TeamBundle\\Controller\\teamController::deleteteamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/team/deleteteam',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_list' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    1 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_seen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_seen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_unseen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsUnSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_unseen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_all_as_seen' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAllAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markAllAsSeen',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    2 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fullcalendar_loader' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ADesigns\\CalendarBundle\\Controller\\CalendarController::loadCalendarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fc-load-events',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_js_routing_js' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_js_routing.controller:indexAction',    '_format' => 'js',  ),  2 =>   array (    '_format' => 'js|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'js|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/js/routing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
